#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <ctime>
#include <cmath>
using namespace std;
typedef long long int LL;
LL powmod (LL base, LL exp, LL mod)
{
    LL res = 1;
    base %= mod;
    while (exp) {
        if (exp % 2)
            res = res * (LL)base % mod;
        exp /= 2;
        base = base * (LL)base % mod;
    }
    return res;
}
bool isprime(LL n)
{
    // 預先判斷偶數與1，節省一點時間。
    if (n == 2) return true;
    if (n < 2 || n % 2 == 0) return false;

    LL u = n - 1, t = 0;
    while (u % 2 == 0) {u >>= 1; t++;}

    // 推定是質數，就實施下一次測試；
    // 確定是合數，就馬上結束。
    LL sprp[3] = {2, 7, 61};   // 足以涵蓋int範圍
    for (LL k=0; k<3; ++k)
    {
        // a沒有大於1、小於n-1的限制，
        // 沒有測試意義的數字，當作是通過測試。
        // （a是質數時，模n後不會等於零，不必特別判斷。）
        LL a = sprp[k] % n;
        if (a == 0 || a == 1 || a == n-1) continue;

        LL x = powmod(a, u,n);
        if (x == 1 || x == n-1) continue;

        for (LL i = 0; i < t-1; i++)
        {
            x = x*x%n;
            if (x == 1) return false;
            if (x == n-1) break;
        }
        if (x == n-1) continue;

        return false;
    }
    // 通過全部測試，確定是質數。
    return true;
}
int main()
{
    LL n;
    while(cin>>n)
    {
        if(isprime(n))cout<<"質數"<<endl;
        else cout<<"非質數"<<endl;
    }
}
